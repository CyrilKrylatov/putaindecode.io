{"hasPreviousPage":true,"hasNextPage":true,"totalCount":131,"items":[{"slug":"es6-es2015-le-protocole-d-iteration","filename":"2015-12-09-es6-es2015-le-protocole-d-iteration","title":"ES6, ES2015 : le protocole d'itération","date":"Wed, 09 Dec 2015 00:00:00 GMT","draft":false,"meta":{"date":"2015-12-09T00:00:00.000Z","title":"ES6, ES2015 : le protocole d'itération","author":"ffesseler","oldSlug":"js/es2015/iterators","slug":"es6-es2015-le-protocole-d-iteration"},"summary":"<p>Imaginez un concept si important que si vous l’enleviez du langage, il faudrait\nen conséquence enlever le spread, le destructuring, les générateurs, le for…of\net bien d’autres. Ce concept, introduit dans l’ES6, est en fait un protocole :\nle protocole</p>\n"},{"slug":"es6-es2015-les-object-literals","filename":"2015-12-08-es6-es2015-les-object-literals","title":"ES6, ES2015 : Les object literals","date":"Tue, 08 Dec 2015 00:00:00 GMT","draft":false,"meta":{"date":"2015-12-08T00:00:00.000Z","title":"ES6, ES2015 : Les object literals","author":"lionelB","oldSlug":"js/es2015/object-literals","slug":"es6-es2015-les-object-literals"},"summary":"<p>Là encore, cette évolution du langage amène un sucre syntaxique bien pratique\nlors de l'initialisation d'objets.</p>\n<h2>Nom des propriétés raccourcies</h2>\n<p>Lorsqu'on crée un objet, il arrive fréquemment que lorsqu'on définisse une\npropriété depuis une varia</p>\n"},{"slug":"es6-es2015-les-template-strings","filename":"2015-12-07-es6-es2015-les-template-strings","title":"ES6, ES2015 : les template strings","date":"Mon, 07 Dec 2015 00:00:00 GMT","draft":false,"meta":{"date":"2015-12-07T00:00:00.000Z","title":"ES6, ES2015 : les template strings","author":"jbleuzen","oldSlug":"js/es2015/template-strings","slug":"es6-es2015-les-template-strings"},"summary":"<p>ES2015 ajoute le support des <em>template strings</em> qui va permettre enfin de se\nsimplifier la vie lorsqu'on doit manipuler des chaînes de caractères.</p>\n<h2>Le principe</h2>\n<p>Pour définir une chaîne en JavaScript, il faut utiliser soit des single quotes,\nsoit d</p>\n"},{"slug":"es6-es2015-les-promesses","filename":"2015-12-06-es6-es2015-les-promesses","title":"ES6, ES2015 : les promesses","date":"Sun, 06 Dec 2015 00:00:00 GMT","draft":false,"meta":{"date":"2015-12-06T00:00:00.000Z","title":"ES6, ES2015 : les promesses","author":"Uhsac","oldSlug":"js/es2015/promises","slug":"es6-es2015-les-promesses"},"summary":"<p>ES2015 apporte une fonctionnalité simplifiant grandement l'asynchrone en\nJavaScript, les promesses ! Visible depuis longtemps dans l'écosystème\nJavaScript grâce a diverses librairies, on peut maintenant utiliser directement\nla spécification officiell</p>\n"},{"slug":"es6-es2015-les-classes","filename":"2015-12-05-es6-es2015-les-classes","title":"ES6, ES2015 : les classes","date":"Sat, 05 Dec 2015 00:00:00 GMT","draft":false,"meta":{"date":"2015-12-05T00:00:00.000Z","title":"ES6, ES2015 : les classes","author":"magsout","oldSlug":"js/es2015/classes","slug":"es6-es2015-les-classes"},"summary":"<p>Les classes introduites par <code>ES2015</code> ne sont clairement que du sucre syntaxique.\nElles n'apportent rien de plus en terme de fonctionnalité. Toutefois, l'objectif\nde cette évolution est de rendre le code plus lisible et plus facilement\naccessible.</p>\n<h2></h2>\n"},{"slug":"es6-es2015-object-assign","filename":"2015-12-04-es6-es2015-object-assign","title":"ES6, ES2015 : Object.assign","date":"Fri, 04 Dec 2015 00:00:00 GMT","draft":false,"meta":{"date":"2015-12-04T00:00:00.000Z","title":"ES6, ES2015 : Object.assign","author":"naholyr","oldSlug":"js/es2015/object-assign","slug":"es6-es2015-object-assign"},"summary":"<p>Vous connaissez les méthodes <code>extend</code> d'underscore ou lodash (mais plutôt lodash\nquand même) ? Comme la plupart de ces fonctions utilitaires, elles sont rendues\nobsolètes par une fonctionnalité d'ES6 (aka ES2015).</p>\n<h1>Object.assign</h1>\n<p>La nouvelle méthod</p>\n"},{"slug":"es6-es2015-les-valeurs-par-defaut-des-arguments","filename":"2015-12-03-es6-es2015-les-valeurs-par-defaut-des-arguments","title":"ES6, ES2015 : les valeurs par défaut des arguments","date":"Thu, 03 Dec 2015 00:00:00 GMT","draft":false,"meta":{"date":"2015-12-03T00:00:00.000Z","title":"ES6, ES2015 : les valeurs par défaut des arguments","author":"naholyr","oldSlug":"js/es2015/defaults","slug":"es6-es2015-les-valeurs-par-defaut-des-arguments"},"summary":"<p>Fatigués de taper <code>if (typeof x === 'undefined') x = defaultValue</code> ? Là encore\nES6 va nous apporter une solution élégante.</p>\n<h1>Valeurs par défaut</h1>\n<p>L'opérateur <code>=</code> permet maintenant en plus d'affecter une valeur à une variable\nde définir une valeur par</p>\n"}]}